[package]
name = "meshtastic-telemetry-daemon-rs"
version = "0.1.0"
edition = "2021"

[alias]
r = "RUST_BACKTRACE=1 run --features debug"
rr = "run --release --features release"

[dependencies]
# My fork of the meshtastic protocol library with updated protobufs---default flags have serde and serde_json
meshtastic = { git = "https://github.com/gatlinnewhouse/meshtastic-rust.git", branch = "dev" }
# Async runtime with tokio::main macro
tokio = { version = "1.32.0", features = ["macros"] }
# Logger
log = { version = "0.4.25" }
# Release logger
syslog = { version = "7.0.0", optional = true }
# Debug logger
colog = { version = "1.3.0", optional = true }
# Serialize/deserialze json, mainly print debugging
serde_json = { version = "1.0" }
# Serialize/deserialize, add deriving trait
serde = { version = "1.0", features = ["derive"] }
# Handle posting to db, compatible with chrono we use
sea-orm = { version = "1.1.5", features = [
  "sqlx-postgres",
  "runtime-tokio-rustls",
  "macros",
  "with-chrono",
] }
# Handle clocks, no wasm
chrono = { version = "0.4.39", features = ["clock", "oldtime", "std"] }
# Handle config reading
config = { version = "0.15.7", features = ["async", "toml"] }
# Handle errors gracefully
anyhow = { version = "1.0.95" }
#iex = { version = "0.2.0", features = ["anyhow"] }

[features]
default = []
debug = ["dep:colog", "anyhow/backtrace"]
release = ["dep:syslog"]

# This release profile was found in discussions when compiling for mips platforms
# But it probably works on x86 and ARM devices as well, we will see
[profile.release]
opt-level = 'z'
lto = true
codegen-units = 1
strip = true
