name: Release
on: [push]
env:
  CRATE_NAME: meshtastic-telemetry-daemon-rs
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: Linux_X86_64_MUSL
            runs-on: ubuntu-24.04
            build_target: x86_64-unknown-linux-musl
            force-use-cross: true

          - os-name: Linux_AARCH64_MUSL
            runs-on: ubuntu-24.04
            build_target: aarch64-unknown-linux-musl
            force-use-cross: true
        toolchain:
          - nightly

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_RUSTFLAGS: "-Zlocation-detail=none -Zfmt-debug=none"
          CARGO_TARGET_x86_64_UNKNOWN_LINUX_MUSL_RUSTFLAGS: "-Zlocation-detail=none -Zfmt-debug=none"
          CARGO_TARGET_MIPS_UNKNOWN_LINUX_MUSL_RUSTFLAGS: "-Zlocation-detail=none -Zfmt-debug=none"
        with:
          command: build
          target: ${{ matrix.platform.build_target }}
          toolchain: nightly
          args: "--features alpine --release -Zbuild-std-features=optimize_for_size,panic_immediate_abort"
          cross-version: v0.2.5
          force-use-cross: true
          use-rust-cache: false
      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: ubi
          target: ${{ matrix.platform.target }}
