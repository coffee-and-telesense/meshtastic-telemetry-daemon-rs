name: Release
on: [push]
env:
  CRATE_NAME: meshtastic-telemetry-daemon-rs
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: Linux_MIPS_MUSL
            runs-on: ubuntu-24.04
            target: mips-unknown-linux-musl

          - os-name: Linux_X86_64_MUSL
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          - os-name: Linux_AARCH64_MUSL
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-musl

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Install Cross
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
      - name: Build binary
        run: |
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_RUSTFLAGS="-Zlocation-detail=none -Zfmt-debug=none" &&
          export CARGO_TARGET_x86_64_UNKNOWN_LINUX_MUSL_RUSTFLAGS="-Zlocation-detail=none -Zfmt-debug=none" &&
          export CARGO_TARGET_MIPS_UNKNOWN_LINUX_MUSL_RUSTFLAGS="-Zlocation-detail=none -Zfmt-debug=none" &&
          apk upgrade --update-cache --available &&
          apk add --no-cache gcc musl-dev openssl-dev openssl-libs-static &&
          rm -rf /var/cache/apk/* &&
          cross +nightly build --features alpine --locked --release -Zbuild-std-features=optimize_for_size,panic_immediate_abort --target=${{ matrix.platform.target }}
      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: ubi
          target: ${{ matrix.platform.target }}
